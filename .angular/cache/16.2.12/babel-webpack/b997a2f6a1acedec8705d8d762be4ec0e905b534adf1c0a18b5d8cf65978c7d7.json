{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\nclass WrappedSocket {\n  constructor(config) {\n    this.config = config;\n    this.subscribersCounter = {};\n    this.eventObservables$ = {};\n    this.emptyConfig = {\n      url: '',\n      options: {}\n    };\n    if (config === undefined) {\n      config = this.emptyConfig;\n    }\n    const url = config.url;\n    const options = config.options;\n    const ioFunc = io.default ? io.default : io;\n    this.ioSocket = ioFunc(url, options);\n  }\n  of(namespace) {\n    this.ioSocket.of(namespace);\n  }\n  on(eventName, callback) {\n    this.ioSocket.on(eventName, callback);\n  }\n  once(eventName, callback) {\n    this.ioSocket.once(eventName, callback);\n  }\n  connect() {\n    return this.ioSocket.connect();\n  }\n  disconnect(_close) {\n    return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n  }\n  emit(_eventName, ..._args) {\n    return this.ioSocket.emit.apply(this.ioSocket, arguments);\n  }\n  removeListener(_eventName, _callback) {\n    return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n  }\n  removeAllListeners(_eventName) {\n    return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n  }\n  fromEvent(eventName) {\n    if (!this.subscribersCounter[eventName]) {\n      this.subscribersCounter[eventName] = 0;\n    }\n    this.subscribersCounter[eventName]++;\n    if (!this.eventObservables$[eventName]) {\n      this.eventObservables$[eventName] = new Observable(observer => {\n        const listener = data => {\n          observer.next(data);\n        };\n        this.ioSocket.on(eventName, listener);\n        return () => {\n          this.subscribersCounter[eventName]--;\n          if (this.subscribersCounter[eventName] === 0) {\n            this.ioSocket.removeListener(eventName, listener);\n            delete this.eventObservables$[eventName];\n          }\n        };\n      }).pipe(share());\n    }\n    return this.eventObservables$[eventName];\n  }\n  fromOneTimeEvent(eventName) {\n    return new Promise(resolve => this.once(eventName, resolve));\n  }\n}\n\n/** Socket factory */\nfunction SocketFactory(config) {\n  return new WrappedSocket(config);\n}\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\nclass SocketIoModule {\n  static forRoot(config) {\n    return {\n      ngModule: SocketIoModule,\n      providers: [{\n        provide: SOCKET_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: WrappedSocket,\n        useFactory: SocketFactory,\n        deps: [SOCKET_CONFIG_TOKEN]\n      }]\n    };\n  }\n}\nSocketIoModule.ɵfac = function SocketIoModule_Factory(t) {\n  return new (t || SocketIoModule)();\n};\nSocketIoModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: SocketIoModule\n});\nSocketIoModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SocketIoModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WrappedSocket as Socket, SocketIoModule };","map":{"version":3,"names":["i0","InjectionToken","NgModule","Observable","share","io","WrappedSocket","constructor","config","subscribersCounter","eventObservables$","emptyConfig","url","options","undefined","ioFunc","default","ioSocket","of","namespace","on","eventName","callback","once","connect","disconnect","_close","apply","arguments","emit","_eventName","_args","removeListener","_callback","removeAllListeners","fromEvent","observer","listener","data","next","pipe","fromOneTimeEvent","Promise","resolve","SocketFactory","SOCKET_CONFIG_TOKEN","SocketIoModule","forRoot","ngModule","providers","provide","useValue","useFactory","deps","ɵfac","SocketIoModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args","Socket"],"sources":["/mnt/c/Users/ylva/dbwebbkurser/jsramverk/2023version/yso/projektJs2024/frontendProj/node_modules/ngx-socket-io/fesm2020/ngx-socket-io.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, NgModule } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { share } from 'rxjs/operators';\nimport * as io from 'socket.io-client';\n\nclass WrappedSocket {\n    constructor(config) {\n        this.config = config;\n        this.subscribersCounter = {};\n        this.eventObservables$ = {};\n        this.emptyConfig = {\n            url: '',\n            options: {},\n        };\n        if (config === undefined) {\n            config = this.emptyConfig;\n        }\n        const url = config.url;\n        const options = config.options;\n        const ioFunc = io.default ? io.default : io;\n        this.ioSocket = ioFunc(url, options);\n    }\n    of(namespace) {\n        this.ioSocket.of(namespace);\n    }\n    on(eventName, callback) {\n        this.ioSocket.on(eventName, callback);\n    }\n    once(eventName, callback) {\n        this.ioSocket.once(eventName, callback);\n    }\n    connect() {\n        return this.ioSocket.connect();\n    }\n    disconnect(_close) {\n        return this.ioSocket.disconnect.apply(this.ioSocket, arguments);\n    }\n    emit(_eventName, ..._args) {\n        return this.ioSocket.emit.apply(this.ioSocket, arguments);\n    }\n    removeListener(_eventName, _callback) {\n        return this.ioSocket.removeListener.apply(this.ioSocket, arguments);\n    }\n    removeAllListeners(_eventName) {\n        return this.ioSocket.removeAllListeners.apply(this.ioSocket, arguments);\n    }\n    fromEvent(eventName) {\n        if (!this.subscribersCounter[eventName]) {\n            this.subscribersCounter[eventName] = 0;\n        }\n        this.subscribersCounter[eventName]++;\n        if (!this.eventObservables$[eventName]) {\n            this.eventObservables$[eventName] = new Observable((observer) => {\n                const listener = (data) => {\n                    observer.next(data);\n                };\n                this.ioSocket.on(eventName, listener);\n                return () => {\n                    this.subscribersCounter[eventName]--;\n                    if (this.subscribersCounter[eventName] === 0) {\n                        this.ioSocket.removeListener(eventName, listener);\n                        delete this.eventObservables$[eventName];\n                    }\n                };\n            }).pipe(share());\n        }\n        return this.eventObservables$[eventName];\n    }\n    fromOneTimeEvent(eventName) {\n        return new Promise(resolve => this.once(eventName, resolve));\n    }\n}\n\n/** Socket factory */\nfunction SocketFactory(config) {\n    return new WrappedSocket(config);\n}\nconst SOCKET_CONFIG_TOKEN = new InjectionToken('__SOCKET_IO_CONFIG__');\nclass SocketIoModule {\n    static forRoot(config) {\n        return {\n            ngModule: SocketIoModule,\n            providers: [\n                { provide: SOCKET_CONFIG_TOKEN, useValue: config },\n                {\n                    provide: WrappedSocket,\n                    useFactory: SocketFactory,\n                    deps: [SOCKET_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n}\nSocketIoModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSocketIoModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule });\nSocketIoModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.0.0\", ngImport: i0, type: SocketIoModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { WrappedSocket as Socket, SocketIoModule };\n"],"mappings":"AAAA,OAAO,KAAKA,EAAE,MAAM,eAAe;AACnC,SAASC,cAAc,EAAEC,QAAQ,QAAQ,eAAe;AACxD,SAASC,UAAU,QAAQ,MAAM;AACjC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAO,KAAKC,EAAE,MAAM,kBAAkB;AAEtC,MAAMC,aAAa,CAAC;EAChBC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,kBAAkB,GAAG,CAAC,CAAC;IAC5B,IAAI,CAACC,iBAAiB,GAAG,CAAC,CAAC;IAC3B,IAAI,CAACC,WAAW,GAAG;MACfC,GAAG,EAAE,EAAE;MACPC,OAAO,EAAE,CAAC;IACd,CAAC;IACD,IAAIL,MAAM,KAAKM,SAAS,EAAE;MACtBN,MAAM,GAAG,IAAI,CAACG,WAAW;IAC7B;IACA,MAAMC,GAAG,GAAGJ,MAAM,CAACI,GAAG;IACtB,MAAMC,OAAO,GAAGL,MAAM,CAACK,OAAO;IAC9B,MAAME,MAAM,GAAGV,EAAE,CAACW,OAAO,GAAGX,EAAE,CAACW,OAAO,GAAGX,EAAE;IAC3C,IAAI,CAACY,QAAQ,GAAGF,MAAM,CAACH,GAAG,EAAEC,OAAO,CAAC;EACxC;EACAK,EAAEA,CAACC,SAAS,EAAE;IACV,IAAI,CAACF,QAAQ,CAACC,EAAE,CAACC,SAAS,CAAC;EAC/B;EACAC,EAAEA,CAACC,SAAS,EAAEC,QAAQ,EAAE;IACpB,IAAI,CAACL,QAAQ,CAACG,EAAE,CAACC,SAAS,EAAEC,QAAQ,CAAC;EACzC;EACAC,IAAIA,CAACF,SAAS,EAAEC,QAAQ,EAAE;IACtB,IAAI,CAACL,QAAQ,CAACM,IAAI,CAACF,SAAS,EAAEC,QAAQ,CAAC;EAC3C;EACAE,OAAOA,CAAA,EAAG;IACN,OAAO,IAAI,CAACP,QAAQ,CAACO,OAAO,CAAC,CAAC;EAClC;EACAC,UAAUA,CAACC,MAAM,EAAE;IACf,OAAO,IAAI,CAACT,QAAQ,CAACQ,UAAU,CAACE,KAAK,CAAC,IAAI,CAACV,QAAQ,EAAEW,SAAS,CAAC;EACnE;EACAC,IAAIA,CAACC,UAAU,EAAE,GAAGC,KAAK,EAAE;IACvB,OAAO,IAAI,CAACd,QAAQ,CAACY,IAAI,CAACF,KAAK,CAAC,IAAI,CAACV,QAAQ,EAAEW,SAAS,CAAC;EAC7D;EACAI,cAAcA,CAACF,UAAU,EAAEG,SAAS,EAAE;IAClC,OAAO,IAAI,CAAChB,QAAQ,CAACe,cAAc,CAACL,KAAK,CAAC,IAAI,CAACV,QAAQ,EAAEW,SAAS,CAAC;EACvE;EACAM,kBAAkBA,CAACJ,UAAU,EAAE;IAC3B,OAAO,IAAI,CAACb,QAAQ,CAACiB,kBAAkB,CAACP,KAAK,CAAC,IAAI,CAACV,QAAQ,EAAEW,SAAS,CAAC;EAC3E;EACAO,SAASA,CAACd,SAAS,EAAE;IACjB,IAAI,CAAC,IAAI,CAACZ,kBAAkB,CAACY,SAAS,CAAC,EAAE;MACrC,IAAI,CAACZ,kBAAkB,CAACY,SAAS,CAAC,GAAG,CAAC;IAC1C;IACA,IAAI,CAACZ,kBAAkB,CAACY,SAAS,CAAC,EAAE;IACpC,IAAI,CAAC,IAAI,CAACX,iBAAiB,CAACW,SAAS,CAAC,EAAE;MACpC,IAAI,CAACX,iBAAiB,CAACW,SAAS,CAAC,GAAG,IAAIlB,UAAU,CAAEiC,QAAQ,IAAK;QAC7D,MAAMC,QAAQ,GAAIC,IAAI,IAAK;UACvBF,QAAQ,CAACG,IAAI,CAACD,IAAI,CAAC;QACvB,CAAC;QACD,IAAI,CAACrB,QAAQ,CAACG,EAAE,CAACC,SAAS,EAAEgB,QAAQ,CAAC;QACrC,OAAO,MAAM;UACT,IAAI,CAAC5B,kBAAkB,CAACY,SAAS,CAAC,EAAE;UACpC,IAAI,IAAI,CAACZ,kBAAkB,CAACY,SAAS,CAAC,KAAK,CAAC,EAAE;YAC1C,IAAI,CAACJ,QAAQ,CAACe,cAAc,CAACX,SAAS,EAAEgB,QAAQ,CAAC;YACjD,OAAO,IAAI,CAAC3B,iBAAiB,CAACW,SAAS,CAAC;UAC5C;QACJ,CAAC;MACL,CAAC,CAAC,CAACmB,IAAI,CAACpC,KAAK,CAAC,CAAC,CAAC;IACpB;IACA,OAAO,IAAI,CAACM,iBAAiB,CAACW,SAAS,CAAC;EAC5C;EACAoB,gBAAgBA,CAACpB,SAAS,EAAE;IACxB,OAAO,IAAIqB,OAAO,CAACC,OAAO,IAAI,IAAI,CAACpB,IAAI,CAACF,SAAS,EAAEsB,OAAO,CAAC,CAAC;EAChE;AACJ;;AAEA;AACA,SAASC,aAAaA,CAACpC,MAAM,EAAE;EAC3B,OAAO,IAAIF,aAAa,CAACE,MAAM,CAAC;AACpC;AACA,MAAMqC,mBAAmB,GAAG,IAAI5C,cAAc,CAAC,sBAAsB,CAAC;AACtE,MAAM6C,cAAc,CAAC;EACjB,OAAOC,OAAOA,CAACvC,MAAM,EAAE;IACnB,OAAO;MACHwC,QAAQ,EAAEF,cAAc;MACxBG,SAAS,EAAE,CACP;QAAEC,OAAO,EAAEL,mBAAmB;QAAEM,QAAQ,EAAE3C;MAAO,CAAC,EAClD;QACI0C,OAAO,EAAE5C,aAAa;QACtB8C,UAAU,EAAER,aAAa;QACzBS,IAAI,EAAE,CAACR,mBAAmB;MAC9B,CAAC;IAET,CAAC;EACL;AACJ;AACAC,cAAc,CAACQ,IAAI,YAAAC,uBAAAC,CAAA;EAAA,YAAAA,CAAA,IAAwFV,cAAc;AAAA,CAAkD;AAC3KA,cAAc,CAACW,IAAI,kBAD8EzD,EAAE,CAAA0D,gBAAA;EAAAC,IAAA,EACSb;AAAc,EAAG;AAC7HA,cAAc,CAACc,IAAI,kBAF8E5D,EAAE,CAAA6D,gBAAA,IAE0B;AAC7H;EAAA,QAAAC,SAAA,oBAAAA,SAAA,KAHiG9D,EAAE,CAAA+D,iBAAA,CAGRjB,cAAc,EAAc,CAAC;IAC5Ga,IAAI,EAAEzD,QAAQ;IACd8D,IAAI,EAAE,CAAC,CAAC,CAAC;EACb,CAAC,CAAC;AAAA;;AAEV;AACA;AACA;;AAEA,SAAS1D,aAAa,IAAI2D,MAAM,EAAEnB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}