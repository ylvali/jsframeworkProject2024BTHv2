{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../chat-service.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"name\"];\nconst _c1 = [\"nameBtn\"];\nconst _c2 = [\"nameTitle\"];\nconst _c3 = [\"nameField\"];\nfunction ChatComponent_ul_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 16)(1, \"li\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const message_r6 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", message_r6, \" \");\n  }\n}\nexport let ChatComponent = /*#__PURE__*/(() => {\n  class ChatComponent {\n    constructor(ChatService) {\n      this.ChatService = ChatService;\n      this.messages = [];\n      this.name = 'NoName';\n      this.comments = this.ChatService.comments;\n    }\n    addName(name) {\n      console.log('new name: ' + name);\n      this.name = name;\n      this.inputElement.nativeElement.remove();\n      this.inputBtnElement.nativeElement.remove();\n      this.inputH1Element.nativeElement.remove();\n      this.inputFieldElement.nativeElement.remove();\n    }\n    sendMsg(msg) {\n      console.log('send message');\n      msg = this.name + \" : \" + msg;\n      this.ChatService.sendMessage(msg);\n      window.scrollTo(0, document.body.scrollHeight);\n    }\n    // Subscribe to chat messages\n    ngOnInit() {\n      this.ChatService.getMessages().subscribe(message => {\n        this.messages.push(message);\n      });\n    }\n    static #_ = this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)(i0.ɵɵdirectiveInject(i1.ChatService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      viewQuery: function ChatComponent_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 5);\n          i0.ɵɵviewQuery(_c1, 5);\n          i0.ɵɵviewQuery(_c2, 5);\n          i0.ɵɵviewQuery(_c3, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputBtnElement = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputH1Element = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.inputFieldElement = _t.first);\n        }\n      },\n      decls: 19,\n      vars: 1,\n      consts: [[\"id\", \"nameField\"], [\"nameField\", \"\"], [\"type\", \"text\"], [\"nameTitle\", \"\"], [\"type\", \"text\", \"id\", \"input1\", \"value\", \"BladeRunner\"], [\"name\", \"\"], [1, \"btn\", 3, \"click\"], [\"nameBtn\", \"\"], [1, \"chat\"], [\"id\", \"chat\"], [\"id\", \"messages\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"form\"], [\"type\", \"text\", \"id\", \"input\", \"value\", \"\", 1, \"input\"], [\"box1\", \"\"], [3, \"click\"], [\"id\", \"chatName\"], [\"id\", \"messages\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r7 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0, 1)(2, \"p\", 2, 3);\n          i0.ɵɵtext(4, \"Your name: \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"input\", 4, 5);\n          i0.ɵɵelementStart(7, \"div\", 6, 7);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_div_click_7_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r2 = i0.ɵɵreference(6);\n            ctx.addName(_r2.value);\n            return i0.ɵɵresetView(_r2.value = \"\");\n          });\n          i0.ɵɵtext(9, \"Send\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(10, \"div\", 8)(11, \"div\", 9);\n          i0.ɵɵtemplate(12, ChatComponent_ul_12_Template, 3, 1, \"ul\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 11);\n          i0.ɵɵelement(14, \"input\", 12, 13);\n          i0.ɵɵelementStart(16, \"div\", 14);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_div_click_16_listener() {\n            i0.ɵɵrestoreView(_r7);\n            const _r5 = i0.ɵɵreference(15);\n            ctx.sendMsg(_r5.value);\n            return i0.ɵɵresetView(_r5.value = \"\");\n          });\n          i0.ɵɵtext(17, \"Send\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(18, \"p\", 15);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"ngForOf\", ctx.messages);\n        }\n      },\n      dependencies: [i2.NgForOf],\n      styles: [\".chat[_ngcontent-%COMP%]{background-color:#585555;color:#fff;font-size:1.5em;width:80%;padding:5% 5% 7%;border-radius:24px;margin:0 auto}#nameField[_ngcontent-%COMP%]{width:50%;margin:0 auto;min-height:200px;font-size:.8em;text-transform:uppercase;position:absolute;width:90%;height:30%;background:black;text-align:center;border-radius:24px}#form[_ngcontent-%COMP%]{background:rgba(0,0,0,.15);padding:1%;position:fixed;bottom:72px;left:0;right:0;display:flex;height:4rem;box-sizing:border-box;-webkit-backdrop-filter:blur(10px);backdrop-filter:blur(10px)}#input1[_ngcontent-%COMP%]{border:none;padding:1%;flex-grow:1;border-radius:2rem;margin:.25rem}#input[_ngcontent-%COMP%]{border:none;padding:0 1rem;flex-grow:1;border-radius:2rem;margin:.25rem;min-height:25px}#input[_ngcontent-%COMP%]:focus{outline:none}.btn[_ngcontent-%COMP%]{background:#333;border:none;padding:1%;margin:.25rem;border-radius:3px;outline:none;color:#fff}#messages[_ngcontent-%COMP%]{list-style-type:none;margin:0;padding:0}#messages[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]{background:#767373;padding:.5rem 1rem}#messages[_ngcontent-%COMP%] > li[_ngcontent-%COMP%]:nth-child(odd){background:#686464}\"]\n    });\n  }\n  return ChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}